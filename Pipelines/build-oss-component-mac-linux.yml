parameters:
  project: string

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.x'
  - script: 'dotnet tool install -g nbgv'
    displayName: 'Install GitVersioning'
  - task: PowerShell@2
    displayName: Set Release Version
    inputs:
      targetType: 'inline'
      script: |
        $version = (nbgv get-version -v AssemblyInformationalVersion).split('+')[0]
        Write-Host "##vso[task.setvariable variable=ReleaseVersion;]$version"

  - task: DotNetCoreCLI@2
    displayName: ${{ parameters.project }} - Dotnet Publish Linux x64
    inputs:
      command: 'publish'
      arguments: '-c $(BuildConfiguration) -o $(Build.BinariesDirectory)/${{ parameters.project }}-linux-x64_$(ReleaseVersion) -r linux-x64'
      publishWebProjects: false
      zipAfterPublish: false
      workingDirectory: $(SolutionDirectory)/${{ parameters.project }}
  - task: DotNetCoreCLI@2
    displayName: ${{ parameters.project }} - Dotnet Publish MacOS x64
    inputs:
      command: 'publish'
      arguments: '-c $(BuildConfiguration) -o $(Build.BinariesDirectory)/${{ parameters.project }}-osx-x64_$(ReleaseVersion) -r osx-x64'
      publishWebProjects: false
      zipAfterPublish: false
      workingDirectory: $(SolutionDirectory)/${{ parameters.project }}
  - task: ArchiveFiles@2
    displayName: Archive Artifact - Linux
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/${{ parameters.project }}-linux-x64_$(ReleaseVersion)'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.StagingDirectory)/${{ parameters.project }}-linux-x64_$(ReleaseVersion).zip'
      replaceExistingArchive: true
  - task: ArchiveFiles@2
    displayName: Archive Artifact - MacOS
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/${{ parameters.project }}-osx-x64_$(ReleaseVersion)'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.StagingDirectory)/${{ parameters.project }}-osx-x64_$(ReleaseVersion).zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    displayName: Store Linux & Mac Archives
    inputs:
      PathtoPublish: '$(Build.StagingDirectory)'
      ArtifactName: 'Unsigned_Nix'
      publishLocation: 'Container'
